{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fmodern Consolas;}{\f1\fmodern\fcharset0 Consolas;}{\f2\fnil\fcharset129 Courier New;}}
{\colortbl ;\red20\green20\blue20;\red142\green142\blue142;\red16\green158\blue98;\red148\green146\blue12;\red170\green51\blue170;\red56\green136\blue159;\red18\green124\blue155;\red170\green85\blue85;\red170\green64\blue64;\red85\green85\blue85;}
\viewkind4\uc1\pard\f0\fs20 Authenticating with public key "Imported-Openssh-Key"\cf1\highlight2 
\par \cf0\highlight0     \u9484?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9488?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                 \cf3\f1\bullet  MobaXterm Personal Edition v24.3 \bullet\cf0\f0                  \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?               \cf4 (SSH client, X server and network tools)\cf0                \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                                                                      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474? \u11166? SSH session to \cf5 ubuntu@43.205.235.106                     \cf0           \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  Direct SSH      :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  SSH compression :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  SSH-browser     :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  X11-forwarding  :  \cf3\f0\u10003?\cf0   (remote display is forwarded through SSH)  \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                                                                      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474? \u11166? For more info, ctrl+click on \cf6\ul help\cf0\ulnone  or visit our \cf6\ul website\cf0\ulnone .            \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9492?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9496?\cf1\highlight2 
\par 
\par \cf0\highlight0 Welcome to Ubuntu 24.04.1 LTS (GNU/Linux 6.8.0-1018-aws x86_64)\cf1\highlight2 
\par 
\par \cf0\highlight0  * Documentation:  https://help.ubuntu.com\cf1\highlight2 
\par \cf0\highlight0  * Management:     https://landscape.canonical.com\cf1\highlight2 
\par \cf0\highlight0  * Support:        https://ubuntu.com/pro\cf1\highlight2 
\par 
\par \cf0\highlight0  System information as of Mon Nov 11 15:40:00 UTC 2024\cf1\highlight2 
\par 
\par \cf0\highlight0   System load:  0.33               Processes:             146\cf1\highlight2 
\par \cf0\highlight0   Usage of /:   32.4% of 13.49GB   Users logged in:       0\cf1\highlight2 
\par \cf0\highlight0   Memory usage: 18%                IPv4 address for enX0: 172.31.39.224\cf1\highlight2 
\par \cf0\highlight0   Swap usage:   0%\cf1\highlight2 
\par 
\par \cf0\highlight0  * Ubuntu Pro delivers the most comprehensive open source security and\cf1\highlight2 
\par \cf0\highlight0    compliance features.\cf1\highlight2 
\par 
\par \cf0\highlight0    https://ubuntu.com/aws/pro\cf1\highlight2 
\par 
\par \cf0\highlight0 Expanded Security Maintenance for Applications is not enabled.\cf1\highlight2 
\par 
\par \cf0\highlight0 23 updates can be applied immediately.\cf1\highlight2 
\par \cf0\highlight0 To see these additional updates run: apt list --upgradable\cf1\highlight2 
\par 
\par \cf0\highlight0 Enable ESM Apps to receive additional future security updates.\cf1\highlight2 
\par \cf0\highlight0 See https://ubuntu.com/esm or run: sudo pro status\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Last login: Mon Nov 11 03:45:28 2024 from 110.226.179.130\cf1\highlight2 
\par \cf0\highlight0 ubuntu@k8s-master:~$ sudo su -\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # history\cf1\highlight2 
\par \cf0\highlight0     1  kube\cf1\highlight2 
\par \cf0\highlight0     2  crictl ps\cf1\highlight2 
\par \cf0\highlight0     3  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0     4  kube\cf1\highlight2 
\par \cf0\highlight0     5  lear\cf1\highlight2 
\par \cf0\highlight0     6  clear\cf1\highlight2 
\par \cf0\highlight0     7  kubectl status\cf1\highlight2 
\par \cf0\highlight0     8  kubeadm status\cf1\highlight2 
\par \cf0\highlight0     9  kubectl version command\cf1\highlight2 
\par \cf0\highlight0    10  kube\cf1\highlight2 
\par \cf0\highlight0    11  kubeadm init\cf1\highlight2 
\par \cf0\highlight0    12  mkdir -p $HOME/.kube\cf1\highlight2 
\par \cf0\highlight0    13  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\cf1\highlight2 
\par \cf0\highlight0    14  sudo chown $(id -u):$(id -g) $HOME/.kube/config\cf1\highlight2 
\par \cf0\highlight0    15  kubectl get nodes\cf1\highlight2 
\par \cf0\highlight0    16  vi cilium.sh\cf1\highlight2 
\par \cf0\highlight0    17  kubectl get pod\cf1\highlight2 
\par \cf0\highlight0    18  kubectl get pod -n kube-system\cf1\highlight2 
\par \cf0\highlight0    19  source .bashrc\cf1\highlight2 
\par \cf0\highlight0    20  kube\cf1\highlight2 
\par \cf0\highlight0    21  vi .bashrc\cf1\highlight2 
\par \cf0\highlight0    22  kube\cf1\highlight2 
\par \cf0\highlight0    23  kubelet version\cf1\highlight2 
\par \cf0\highlight0    24  kubectl version\cf1\highlight2 
\par \cf0\highlight0    25  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0    26  crictl ps\cf1\highlight2 
\par \cf0\highlight0    27  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0    28  crictl ps\cf1\highlight2 
\par \cf0\highlight0    29  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0    30  cd /etc\cf1\highlight2 
\par \cf0\highlight0    31  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    32  cd /root\cf1\highlight2 
\par \cf0\highlight0    33  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    34  export PS1='\\[\\033[0;31m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    35  ls -lart\cf1\highlight2 
\par \cf0\highlight0    36  vi .bashrc\cf1\highlight2 
\par \cf0\highlight0    37  export PS1="\\[\\033[34m\\][\\$(date +%H%M)][\\u@\\h:\\w]$ "\cf1\highlight2 
\par \cf0\highlight0    38  export PS1='\\[\\033[0;32m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    39  export PS1='\\[\\033[0;35m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    40  export PS1='\\[\\033[0;33m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    41  export PS1='\\[\\033[0;36m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    42  export PS1='\\[\\033[0;35m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    43  vi /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    44  sh /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    45  vi /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    46  export PS1='$(whoami)@$(hostname):$(pwd)$ '\cf1\highlight2 
\par \cf0\highlight0    47  export PS1='\\[\\e[0;36m\\]\\u\\[\\e[0m\\]@\\[\\e[0;33m\\]\\h\\[\\e[0m\\]:\\[\\e[0;35m\\]\\w\\[\\e[0m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    48  pwd\cf1\highlight2 
\par \cf0\highlight0    49  export PS1="[\\e[1;33m\\u\\e[m@\\e[1;36m\\h\\e[m] [\\$(date +%k:%M:%S)]\\n\\e[0;32m[\\w]\\e[m \\n\\$ "\cf1\highlight2 
\par \cf0\highlight0    50  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\](\\D\{%H:%M:%S\})\\[\\033[01;34m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    51  pwd\cf1\highlight2 
\par \cf0\highlight0    52  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;35m\\]\\u@\\h\\[\\033[00m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    53  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\](\\D\{%H:%M:%S\})\\[\\033[01;34m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    54  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]\\[\\033[01;34m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    55  cd\cf1\highlight2 
\par \cf0\highlight0    56  vi /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    57  crictl ps\cf1\highlight2 
\par \cf0\highlight0    58  systemctl crio status\cf1\highlight2 
\par \cf0\highlight0    59  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    60  free -h\cf1\highlight2 
\par \cf0\highlight0    61  kubeadm init\cf1\highlight2 
\par \cf0\highlight0    62  kubeadm init --v=5\cf1\highlight2 
\par \cf0\highlight0    63  echo $HOME\cf1\highlight2 
\par \cf0\highlight0    64  ls -lart\cf1\highlight2 
\par \cf0\highlight0    65  cd /\cf1\highlight2 
\par \cf0\highlight0    66  ls -lart\cf1\highlight2 
\par \cf0\highlight0    67  cd /etc/kubernetes\cf1\highlight2 
\par \cf0\highlight0    68  ls -lart\cf1\highlight2 
\par \cf0\highlight0    69  vi admin.conf\cf1\highlight2 
\par \cf0\highlight0    70  cd pki\cf1\highlight2 
\par \cf0\highlight0    71  ls -lart\cf1\highlight2 
\par \cf0\highlight0    72  vi admin.conf\cf1\highlight2 
\par \cf0\highlight0    73  cd ..\cf1\highlight2 
\par \cf0\highlight0    74  vi admin.conf\cf1\highlight2 
\par \cf0\highlight0    75  vi controller-manager.conf\cf1\highlight2 
\par \cf0\highlight0    76  vi scheduler.conf\cf1\highlight2 
\par \cf0\highlight0    77  vi kubelet.conf\cf1\highlight2 
\par \cf0\highlight0    78  cd manifests/\cf1\highlight2 
\par \cf0\highlight0    79  ls -lart\cf1\highlight2 
\par \cf0\highlight0    80  vi etcd.yaml\cf1\highlight2 
\par \cf0\highlight0    81  vi kube-apiserver.yaml\cf1\highlight2 
\par \cf0\highlight0    82  vi kube-controller-manager.yaml\cf1\highlight2 
\par \cf0\highlight0    83  vi kube-scheduler.yaml\cf1\highlight2 
\par \cf0\highlight0    84  vi etcd.yaml\cf1\highlight2 
\par \cf0\highlight0    85  systemctl start crio\cf1\highlight2 
\par \cf0\highlight0    86  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    87  systemctl stop crio\cf1\highlight2 
\par \cf0\highlight0    88  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    89  systemctl start crio\cf1\highlight2 
\par \cf0\highlight0    90  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    91  kubeadm init\cf1\highlight2 
\par \cf0\highlight0    92  kubectl get nodes\cf1\highlight2 
\par \cf0\highlight0    93  cd /\cf1\highlight2 
\par \cf0\highlight0    94  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    95  find / -type f -name cilium.sh\cf1\highlight2 
\par \cf0\highlight0    96  cd /root\cf1\highlight2 
\par \cf0\highlight0    97  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    98  cd /usr/local/bin\cf1\highlight2 
\par \cf0\highlight0    99  ls -lart\cf1\highlight2 
\par \cf0\highlight0   100  vi cilium\cf1\highlight2 
\par \cf0\highlight0   101  kubectl status cni\cf1\highlight2 
\par \cf0\highlight0   102  systemctl status cni\cf1\highlight2 
\par \cf0\highlight0   103  systemctl status cilium\cf1\highlight2 
\par \cf0\highlight0   104  crictl ps\cf1\highlight2 
\par \cf0\highlight0   105  kubectl get pod\cf1\highlight2 
\par \cf0\highlight0   106  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   107  kubectl get po\cf1\highlight2 
\par \cf0\highlight0   108  kubectl get pod -n kube-system\cf1\highlight2 
\par \cf0\highlight0   109  find / -type f -name .bashrc\cf1\highlight2 
\par \cf0\highlight0   110  vi /root/ bashrc\cf1\highlight2 
\par \cf0\highlight0   111  vi /home/ubuntu/.bashrc\cf1\highlight2 
\par \cf0\highlight0   112  cd ^\cf1\highlight2 
\par \cf0\highlight0   113  cd ~\cf1\highlight2 
\par \cf0\highlight0   114  echo "source <(kubectl completion bash)" >> .bashrc\cf1\highlight2 
\par \cf0\highlight0   115  source .bashrc\cf1\highlight2 
\par \cf0\highlight0   116  kubectl describe pod mypod\cf1\highlight2 
\par \cf0\highlight0   117  cd /var\cf1\highlight2 
\par \cf0\highlight0   118  cd /run/secrets\cf1\highlight2 
\par \cf0\highlight0   119  ls\cf1\highlight2 
\par \cf0\highlight0   120  ls -lart\cf1\highlight2 
\par \cf0\highlight0   121  vi run\cf1\highlight2 
\par \cf0\highlight0   122  kubectl run redis --image=redis\cf1\highlight2 
\par \cf0\highlight0   123  kubectl describe pod redis\cf1\highlight2 
\par \cf0\highlight0   124  kubectl run --image=nginx\cf1\highlight2 
\par \cf0\highlight0   125  kubectl run nginx --image=nginx\cf1\highlight2 
\par \cf0\highlight0   126  kubectl describe pod nginx\cf1\highlight2 
\par \cf0\highlight0   127  kubectl run nginx --image=nginx:latest\cf1\highlight2 
\par \cf0\highlight0   128  kubectl run latestnginxversion --image=nginx:latest\cf1\highlight2 
\par \cf0\highlight0   129  kubectl describe pod latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   130  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   131  kubectl run nginx --image=nginx --replicas=3\cf1\highlight2 
\par \cf0\highlight0   132  kubectl run 3replicasofnginx --image=nginx --replicas=3\cf1\highlight2 
\par \cf0\highlight0   133  kubectl logs mypod\cf1\highlight2 
\par \cf0\highlight0   134  kubectl logs nginx\cf1\highlight2 
\par \cf0\highlight0   135  kubectl logs redis\cf1\highlight2 
\par \cf0\highlight0   136  kubectl exec -it mypod --bash\cf1\highlight2 
\par \cf0\highlight0   137  kubectl exec -it mypod -- bash\cf1\highlight2 
\par \cf0\highlight0   138  kubectl get pods -o wide\cf1\highlight2 
\par \cf0\highlight0   139  crictl status\cf1\highlight2 
\par \cf0\highlight0   140  crictl ps\cf1\highlight2 
\par \cf0\highlight0   141  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   142  kubectl describe\cf1\highlight2 
\par \cf0\highlight0   143  kubectl describe pod mypod\cf1\highlight2 
\par \cf0\highlight0   144  crictl ps\cf1\highlight2 
\par \cf0\highlight0   145  cd /var/logs\cf1\highlight2 
\par \cf0\highlight0   146  cd /var/log\cf1\highlight2 
\par \cf0\highlight0   147  ls\cf1\highlight2 
\par \cf0\highlight0   148  cd pods\cf1\highlight2 
\par \cf0\highlight0   149  ls\cf1\highlight2 
\par \cf0\highlight0   150  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   151  kubectl run mypod --image nginx:latest --port 80 --dry-run=client\cf1\highlight2 
\par \cf0\highlight0   152  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   153  kubectl run mypod --image nginx:latest --port 80 --dry-run=client -o yaml\cf1\highlight2 
\par \cf0\highlight0   154  kubectl run mypod --image nginx:latest --port 80 --dry-run=client -o yaml > firstpod.yaml\cf1\highlight2 
\par \cf0\highlight0   155  ls -lart\cf1\highlight2 
\par \cf0\highlight0   156  rz\cf1\highlight2 
\par \cf0\highlight0   157  **00000000000000\cf1\highlight2 
\par \cf0\highlight0   158  apt install lrzsz\cf1\highlight2 
\par \cf0\highlight0   159  rz\cf1\highlight2 
\par \cf0\highlight0   160  **0100000063f694\cf1\highlight2 
\par \cf0\highlight0   161  \u9618?**0100000063f694\cf1\highlight2 
\par \cf0\highlight0   162  \u9618?\cf1\highlight2 
\par \cf0\highlight0   163  **0100000063f694\cf1\highlight2 
\par \cf0\highlight0   164  \u9618?**0100000063f694\cf1\highlight2 
\par \cf0\highlight0   165  **0100000063f694\cf1\highlight2 
\par \cf0\highlight0   166  \u9618?**0100000063f694\cf1\highlight2 
\par \cf0\highlight0   167  history\cf1\highlight2 
\par \cf0\highlight0   168  kube\cf1\highlight2 
\par \cf0\highlight0   169  kubectl\cf1\highlight2 
\par \cf0\highlight0   170  kubectl run mypod --image nginx:latest --port 80 --help\cf1\highlight2 
\par \cf0\highlight0   171  kubectl explain\cf1\highlight2 
\par \cf0\highlight0   172  kubectl explain pod\cf1\highlight2 
\par \cf0\highlight0   173  kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0   174  apt-install fish\cf1\highlight2 
\par \cf0\highlight0   175  apt install fish\cf1\highlight2 
\par \cf0\highlight0   176  fish\cf1\highlight2 
\par \cf0\highlight0   177  history\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kube\cf1\highlight2 
\par \cf0\highlight0 Command 'kube' not found, did you mean:\cf1\highlight2 
\par \cf0\highlight0   command 'kubu' from snap kubu (1.1.4)\cf1\highlight2 
\par \cf0\highlight0   command 'jube' from deb jube (2.5.1-1)\cf1\highlight2 
\par \cf0\highlight0   command 'qube' from deb avogadro-utils (1.98.1-2)\cf1\highlight2 
\par \cf0\highlight0 See 'snap info <snapname>' for additional versions.\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kube\cf1\highlight2 
\par \cf0\highlight0 kubeadm  kubectl  kubelet\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubekubectl\cf1\highlight2 
\par \cf0\highlight0 kubekubectl: command not found\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 kubectl controls the Kubernetes cluster manager.\cf1\highlight2 
\par 
\par \cf0\highlight0  Find more information at: https://kubernetes.io/docs/reference/kubectl/\cf1\highlight2 
\par 
\par \cf0\highlight0 Basic Commands (Beginner):\cf1\highlight2 
\par \cf0\highlight0   create          Create a resource from a file or from stdin\cf1\highlight2 
\par \cf0\highlight0   expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service\cf1\highlight2 
\par \cf0\highlight0   run             Run a particular image on the cluster\cf1\highlight2 
\par \cf0\highlight0   set             Set specific features on objects\cf1\highlight2 
\par 
\par \cf0\highlight0 Basic Commands (Intermediate):\cf1\highlight2 
\par \cf0\highlight0   explain         Get documentation for a resource\cf1\highlight2 
\par \cf0\highlight0   get             Display one or many resources\cf1\highlight2 
\par \cf0\highlight0   edit            Edit a resource on the server\cf1\highlight2 
\par \cf0\highlight0   delete          Delete resources by file names, stdin, resources and names, or by resources and label selector\cf1\highlight2 
\par 
\par \cf0\highlight0 Deploy Commands:\cf1\highlight2 
\par \cf0\highlight0   rollout         Manage the rollout of a resource\cf1\highlight2 
\par \cf0\highlight0   scale           Set a new size for a deployment, replica set, or replication controller\cf1\highlight2 
\par \cf0\highlight0   autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller\cf1\highlight2 
\par 
\par \cf0\highlight0 Cluster Management Commands:\cf1\highlight2 
\par \cf0\highlight0   certificate     Modify certificate resources\cf1\highlight2 
\par \cf0\highlight0   cluster-info    Display cluster information\cf1\highlight2 
\par \cf0\highlight0   top             Display resource (CPU/memory) usage\cf1\highlight2 
\par \cf0\highlight0   cordon          Mark node as unschedulable\cf1\highlight2 
\par \cf0\highlight0   uncordon        Mark node as schedulable\cf1\highlight2 
\par \cf0\highlight0   drain           Drain node in preparation for maintenance\cf1\highlight2 
\par \cf0\highlight0   taint           Update the taints on one or more nodes\cf1\highlight2 
\par 
\par \cf0\highlight0 Troubleshooting and Debugging Commands:\cf1\highlight2 
\par \cf0\highlight0   describe        Show details of a specific resource or group of resources\cf1\highlight2 
\par \cf0\highlight0   logs            Print the logs for a container in a pod\cf1\highlight2 
\par \cf0\highlight0   attach          Attach to a running container\cf1\highlight2 
\par \cf0\highlight0   exec            Execute a command in a container\cf1\highlight2 
\par \cf0\highlight0   port-forward    Forward one or more local ports to a pod\cf1\highlight2 
\par \cf0\highlight0   proxy           Run a proxy to the Kubernetes API server\cf1\highlight2 
\par \cf0\highlight0   cp              Copy files and directories to and from containers\cf1\highlight2 
\par \cf0\highlight0   auth            Inspect authorization\cf1\highlight2 
\par \cf0\highlight0   debug           Create debugging sessions for troubleshooting workloads and nodes\cf1\highlight2 
\par \cf0\highlight0   events          List events\cf1\highlight2 
\par 
\par \cf0\highlight0 Advanced Commands:\cf1\highlight2 
\par \cf0\highlight0   diff            Diff the live version against a would-be applied version\cf1\highlight2 
\par \cf0\highlight0   apply           Apply a configuration to a resource by file name or stdin\cf1\highlight2 
\par \cf0\highlight0   patch           Update fields of a resource\cf1\highlight2 
\par \cf0\highlight0   replace         Replace a resource by file name or stdin\cf1\highlight2 
\par \cf0\highlight0   wait            Experimental: Wait for a specific condition on one or many resources\cf1\highlight2 
\par \cf0\highlight0   kustomize       Build a kustomization target from a directory or URL\cf1\highlight2 
\par 
\par \cf0\highlight0 Settings Commands:\cf1\highlight2 
\par \cf0\highlight0   label           Update the labels on a resource\cf1\highlight2 
\par \cf0\highlight0   annotate        Update the annotations on a resource\cf1\highlight2 
\par \cf0\highlight0   completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)\cf1\highlight2 
\par 
\par \cf0\highlight0 Other Commands:\cf1\highlight2 
\par \cf0\highlight0   api-resources   Print the supported API resources on the server\cf1\highlight2 
\par \cf0\highlight0   api-versions    Print the supported API versions on the server, in the form of "group/version"\cf1\highlight2 
\par \cf0\highlight0   config          Modify kubeconfig files\cf1\highlight2 
\par \cf0\highlight0   plugin          Provides utilities for interacting with plugins\cf1\highlight2 
\par \cf0\highlight0   version         Print the client and server version information\cf1\highlight2 
\par 
\par \cf0\highlight0 Usage:\cf1\highlight2 
\par \cf0\highlight0   kubectl [flags] [options]\cf1\highlight2 
\par 
\par \cf0\highlight0 Use "kubectl <command> --help" for more information about a given command.\cf1\highlight2 
\par \cf0\highlight0 Use "kubectl options" for a list of global command-line options (applies to all commands).\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 kubectl controls the Kubernetes cluster manager.\cf1\highlight2 
\par 
\par \cf0\highlight0  Find more information at: https://kubernetes.io/docs/reference/kubectl/\cf1\highlight2 
\par 
\par \cf0\highlight0 Basic Commands (Beginner):\cf1\highlight2 
\par \cf0\highlight0   create          Create a resource from a file or from stdin\cf1\highlight2 
\par \cf0\highlight0   expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service\cf1\highlight2 
\par \cf0\highlight0   run             Run a particular image on the cluster\cf1\highlight2 
\par \cf0\highlight0   set             Set specific features on objects\cf1\highlight2 
\par 
\par \cf0\highlight0 Basic Commands (Intermediate):\cf1\highlight2 
\par \cf0\highlight0   explain         Get documentation for a resource\cf1\highlight2 
\par \cf0\highlight0   get             Display one or many resources\cf1\highlight2 
\par \cf0\highlight0   edit            Edit a resource on the server\cf1\highlight2 
\par \cf0\highlight0   delete          Delete resources by file names, stdin, resources and names, or by resources and label selector\cf1\highlight2 
\par 
\par \cf0\highlight0 Deploy Commands:\cf1\highlight2 
\par \cf0\highlight0   rollout         Manage the rollout of a resource\cf1\highlight2 
\par \cf0\highlight0   scale           Set a new size for a deployment, replica set, or replication controller\cf1\highlight2 
\par \cf0\highlight0   autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller\cf1\highlight2 
\par 
\par \cf0\highlight0 Cluster Management Commands:\cf1\highlight2 
\par \cf0\highlight0   certificate     Modify certificate resources\cf1\highlight2 
\par \cf0\highlight0   cluster-info    Display cluster information\cf1\highlight2 
\par \cf0\highlight0   top             Display resource (CPU/memory) usage\cf1\highlight2 
\par \cf0\highlight0   cordon          Mark node as unschedulable\cf1\highlight2 
\par \cf0\highlight0   uncordon        Mark node as schedulable\cf1\highlight2 
\par \cf0\highlight0   drain           Drain node in preparation for maintenance\cf1\highlight2 
\par \cf0\highlight0   taint           Update the taints on one or more nodes\cf1\highlight2 
\par 
\par \cf0\highlight0 Troubleshooting and Debugging Commands:\cf1\highlight2 
\par \cf0\highlight0   describe        Show details of a specific resource or group of resources\cf1\highlight2 
\par \cf0\highlight0   logs            Print the logs for a container in a pod\cf1\highlight2 
\par \cf0\highlight0   attach          Attach to a running container\cf1\highlight2 
\par \cf0\highlight0   exec            Execute a command in a container\cf1\highlight2 
\par \cf0\highlight0   port-forward    Forward one or more local ports to a pod\cf1\highlight2 
\par \cf0\highlight0   proxy           Run a proxy to the Kubernetes API server\cf1\highlight2 
\par \cf0\highlight0   cp              Copy files and directories to and from containers\cf1\highlight2 
\par \cf0\highlight0   auth            Inspect authorization\cf1\highlight2 
\par \cf0\highlight0   debug           Create debugging sessions for troubleshooting workloads and nodes\cf1\highlight2 
\par \cf0\highlight0   events          List events\cf1\highlight2 
\par 
\par \cf0\highlight0 Advanced Commands:\cf1\highlight2 
\par \cf0\highlight0   diff            Diff the live version against a would-be applied version\cf1\highlight2 
\par \cf0\highlight0   apply           Apply a configuration to a resource by file name or stdin\cf1\highlight2 
\par \cf0\highlight0   patch           Update fields of a resource\cf1\highlight2 
\par \cf0\highlight0   replace         Replace a resource by file name or stdin\cf1\highlight2 
\par \cf0\highlight0   wait            Experimental: Wait for a specific condition on one or many resources\cf1\highlight2 
\par \cf0\highlight0   kustomize       Build a kustomization target from a directory or URL\cf1\highlight2 
\par 
\par \cf0\highlight0 Settings Commands:\cf1\highlight2 
\par \cf0\highlight0   label           Update the labels on a resource\cf1\highlight2 
\par \cf0\highlight0   annotate        Update the annotations on a resource\cf1\highlight2 
\par \cf0\highlight0   completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)\cf1\highlight2 
\par 
\par \cf0\highlight0 Other Commands:\cf1\highlight2 
\par \cf0\highlight0   api-resources   Print the supported API resources on the server\cf1\highlight2 
\par \cf0\highlight0   api-versions    Print the supported API versions on the server, in the form of "group/version"\cf1\highlight2 
\par \cf0\highlight0   config          Modify kubeconfig files\cf1\highlight2 
\par \cf0\highlight0   plugin          Provides utilities for interacting with plugins\cf1\highlight2 
\par \cf0\highlight0   version         Print the client and server version information\cf1\highlight2 
\par 
\par \cf0\highlight0 Usage:\cf1\highlight2 
\par \cf0\highlight0   kubectl [flags] [options]\cf1\highlight2 
\par 
\par \cf0\highlight0 Use "kubectl <command> --help" for more information about a given command.\cf1\highlight2 
\par \cf0\highlight0 Use "kubectl options" for a list of global command-line options (applies to all commands).\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 kubectl controls the Kubernetes cluster manager.\cf1\highlight2 
\par 
\par \cf0\highlight0  Find more information at: https://kubernetes.io/docs/reference/kubectl/\cf1\highlight2 
\par 
\par \cf0\highlight0 Basic Commands (Beginner):\cf1\highlight2 
\par \cf0\highlight0   create          Create a resource from a file or from stdin\cf1\highlight2 
\par \cf0\highlight0   expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service\cf1\highlight2 
\par \cf0\highlight0   run             Run a particular image on the cluster\cf1\highlight2 
\par \cf0\highlight0   set             Set specific features on objects\cf1\highlight2 
\par 
\par \cf0\highlight0 Basic Commands (Intermediate):\cf1\highlight2 
\par \cf0\highlight0   explain         Get documentation for a resource\cf1\highlight2 
\par \cf0\highlight0   get             Display one or many resources\cf1\highlight2 
\par \cf0\highlight0   edit            Edit a resource on the server\cf1\highlight2 
\par \cf0\highlight0   delete          Delete resources by file names, stdin, resources and names, or by resources and label selector\cf1\highlight2 
\par 
\par \cf0\highlight0 Deploy Commands:\cf1\highlight2 
\par \cf0\highlight0   rollout         Manage the rollout of a resource\cf1\highlight2 
\par \cf0\highlight0   scale           Set a new size for a deployment, replica set, or replication controller\cf1\highlight2 
\par \cf0\highlight0   autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller\cf1\highlight2 
\par 
\par \cf0\highlight0 Cluster Management Commands:\cf1\highlight2 
\par \cf0\highlight0   certificate     Modify certificate resources\cf1\highlight2 
\par \cf0\highlight0   cluster-info    Display cluster information\cf1\highlight2 
\par \cf0\highlight0   top             Display resource (CPU/memory) usage\cf1\highlight2 
\par \cf0\highlight0   cordon          Mark node as unschedulable\cf1\highlight2 
\par \cf0\highlight0   uncordon        Mark node as schedulable\cf1\highlight2 
\par \cf0\highlight0   drain           Drain node in preparation for maintenance\cf1\highlight2 
\par \cf0\highlight0   taint           Update the taints on one or more nodes\cf1\highlight2 
\par 
\par \cf0\highlight0 Troubleshooting and Debugging Commands:\cf1\highlight2 
\par \cf0\highlight0   describe        Show details of a specific resource or group of resources\cf1\highlight2 
\par \cf0\highlight0   logs            Print the logs for a container in a pod\cf1\highlight2 
\par \cf0\highlight0   attach          Attach to a running container\cf1\highlight2 
\par \cf0\highlight0   exec            Execute a command in a container\cf1\highlight2 
\par \cf0\highlight0   port-forward    Forward one or more local ports to a pod\cf1\highlight2 
\par \cf0\highlight0   proxy           Run a proxy to the Kubernetes API server\cf1\highlight2 
\par \cf0\highlight0   cp              Copy files and directories to and from containers\cf1\highlight2 
\par \cf0\highlight0   auth            Inspect authorization\cf1\highlight2 
\par \cf0\highlight0   debug           Create debugging sessions for troubleshooting workloads and nodes\cf1\highlight2 
\par \cf0\highlight0   events          List events\cf1\highlight2 
\par 
\par \cf0\highlight0 Advanced Commands:\cf1\highlight2 
\par \cf0\highlight0   diff            Diff the live version against a would-be applied version\cf1\highlight2 
\par \cf0\highlight0   apply           Apply a configuration to a resource by file name or stdin\cf1\highlight2 
\par \cf0\highlight0   patch           Update fields of a resource\cf1\highlight2 
\par \cf0\highlight0   replace         Replace a resource by file name or stdin\cf1\highlight2 
\par \cf0\highlight0   wait            Experimental: Wait for a specific condition on one or many resources\cf1\highlight2 
\par \cf0\highlight0   kustomize       Build a kustomization target from a directory or URL\cf1\highlight2 
\par 
\par \cf0\highlight0 Settings Commands:\cf1\highlight2 
\par \cf0\highlight0   label           Update the labels on a resource\cf1\highlight2 
\par \cf0\highlight0   annotate        Update the annotations on a resource\cf1\highlight2 
\par \cf0\highlight0   completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)\cf1\highlight2 
\par 
\par \cf0\highlight0 Other Commands:\cf1\highlight2 
\par \cf0\highlight0   api-resources   Print the supported API resources on the server\cf1\highlight2 
\par \cf0\highlight0   api-versions    Print the supported API versions on the server, in the form of "group/version"\cf1\highlight2 
\par \cf0\highlight0   config          Modify kubeconfig files\cf1\highlight2 
\par \cf0\highlight0   plugin          Provides utilities for interacting with plugins\cf1\highlight2 
\par \cf0\highlight0   version         Print the client and server version information\cf1\highlight2 
\par 
\par \cf0\highlight0 Usage:\cf1\highlight2 
\par \cf0\highlight0   kubectl [flags] [options]\cf1\highlight2 
\par 
\par \cf0\highlight0 Use "kubectl <command> --help" for more information about a given command.\cf1\highlight2 
\par \cf0\highlight0 Use "kubectl options" for a list of global command-line options (applies to all commands).\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl\cf1\highlight2 
\par \cf0\highlight0 annotate       (Update the annotations on a resource)\cf1\highlight2 
\par \cf0\highlight0 api-resources  (Print the supported API resources on the server)\cf1\highlight2 
\par \cf0\highlight0 api-versions   (Print the supported API versions on the server, in the form of "group/version")\cf1\highlight2 
\par \cf0\highlight0 apply          (Apply a configuration to a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 attach         (Attach to a running container)\cf1\highlight2 
\par \cf0\highlight0 auth           (Inspect authorization)\cf1\highlight2 
\par \cf0\highlight0 autoscale      (Auto-scale a deployment, replica set, stateful set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 certificate    (Modify certificate resources)\cf1\highlight2 
\par \cf0\highlight0 cluster-info   (Display cluster information)\cf1\highlight2 
\par \cf0\highlight0 completion     (Output shell completion code for the specified shell (bash, zsh, fish, or powershell))\cf1\highlight2 
\par \cf0\highlight0 config         (Modify kubeconfig files)\cf1\highlight2 
\par \cf0\highlight0 cordon         (Mark node as unschedulable)\cf1\highlight2 
\par \cf0\highlight0 cp             (Copy files and directories to and from containers)\cf1\highlight2 
\par \cf0\highlight0 create         (Create a resource from a file or from stdin)\cf1\highlight2 
\par \cf0\highlight0 debug          (Create debugging sessions for troubleshooting workloads and nodes)\cf1\highlight2 
\par \cf0\highlight0 delete         (Delete resources by file names, stdin, resources and names, or by resources and label selector)\cf1\highlight2 
\par \cf0\highlight0 describe       (Show details of a specific resource or group of resources)\cf1\highlight2 
\par \cf0\highlight0 diff           (Diff the live version against a would-be applied version)\cf1\highlight2 
\par \cf0\highlight0 drain          (Drain node in preparation for maintenance)\cf1\highlight2 
\par \cf0\highlight0 edit           (Edit a resource on the server)\cf1\highlight2 
\par \cf0\highlight0 events         (List events)\cf1\highlight2 
\par \cf0\highlight0 exec           (Execute a command in a container)\cf1\highlight2 
\par \cf0\highlight0 explain        (Get documentation for a resource)\cf1\highlight2 
\par \cf0\highlight0 expose         (Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service)\cf1\highlight2 
\par \cf0\highlight0 get            (Display one or many resources)\cf1\highlight2 
\par \cf0\highlight0 help           (Help about any command)\cf1\highlight2 
\par \cf0\highlight0 kustomize      (Build a kustomization target from a directory or URL)\cf1\highlight2 
\par \cf0\highlight0 label          (Update the labels on a resource)\cf1\highlight2 
\par \cf0\highlight0 logs           (Print the logs for a container in a pod)\cf1\highlight2 
\par \cf0\highlight0 options        (Print the list of flags inherited by all commands)\cf1\highlight2 
\par \cf0\highlight0 patch          (Update fields of a resource)\cf1\highlight2 
\par \cf0\highlight0 plugin         (Provides utilities for interacting with plugins)\cf1\highlight2 
\par \cf0\highlight0 port-forward   (Forward one or more local ports to a pod)\cf1\highlight2 
\par \cf0\highlight0 proxy          (Run a proxy to the Kubernetes API server)\cf1\highlight2 
\par \cf0\highlight0 replace        (Replace a resource by file name or stdin)\cf1\highlight2 
\par \cf0\highlight0 rollout        (Manage the rollout of a resource)\cf1\highlight2 
\par \cf0\highlight0 run            (Run a particular image on the cluster)\cf1\highlight2 
\par \cf0\highlight0 scale          (Set a new size for a deployment, replica set, or replication controller)\cf1\highlight2 
\par \cf0\highlight0 set            (Set specific features on objects)\cf1\highlight2 
\par \cf0\highlight0 taint          (Update the taints on one or more nodes)\cf1\highlight2 
\par \cf0\highlight0 top            (Display resource (CPU/memory) usage)\cf1\highlight2 
\par \cf0\highlight0 uncordon       (Mark node as schedulable)\cf1\highlight2 
\par \cf0\highlight0 version        (Print the client and server version information)\cf1\highlight2 
\par \cf0\highlight0 wait           (Experimental: Wait for a specific condition on one or many resources)\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kube\cf1\highlight2 
\par \cf0\highlight0 Command 'kube' not found, did you mean:\cf1\highlight2 
\par \cf0\highlight0   command 'kubu' from snap kubu (1.1.4)\cf1\highlight2 
\par \cf0\highlight0   command 'jube' from deb jube (2.5.1-1)\cf1\highlight2 
\par \cf0\highlight0   command 'qube' from deb avogadro-utils (1.98.1-2)\cf1\highlight2 
\par \cf0\highlight0 See 'snap info <snapname>' for additional versions.\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kube\cf1\highlight2 
\par \cf0\highlight0 kubeadm  kubectl  kubelet\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kube\cf1\highlight2 
\par \cf0\highlight0 kubeadm  kubectl  kubelet\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0 poddisruptionbudgets.policy  pods                         podtemplates\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0 poddisruptionbudgets.policy  pods                         podtemplates\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0 poddisruptionbudgets.policy  pods                         podtemplates\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod pods\cf1\highlight2 
\par \cf0\highlight0 Error from server (NotFound): pods "pods" not found\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0 poddisruptionbudgets.policy  pods                         podtemplates\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod podtemplates\cf1\highlight2 
\par \cf0\highlight0 Error from server (NotFound): pods "podtemplates" not found\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe podtemplates\cf1\highlight2 
\par \cf0\highlight0 No resources found in default namespace.\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl run mypod --image nginx:latest --port 80 --help\cf1\highlight2 
\par \cf0\highlight0 Create and run a particular image in a pod.\cf1\highlight2 
\par 
\par \cf0\highlight0 Examples:\cf1\highlight2 
\par \cf0\highlight0   # Start a nginx pod\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a hazelcast pod and let the container expose port 5701\cf1\highlight2 
\par \cf0\highlight0   kubectl run hazelcast --image=hazelcast/hazelcast --port=5701\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a hazelcast pod and set environment variables "DNS_DOMAIN=cluster" and "POD_NAMESPACE=default" in the\cf1\highlight2 
\par \cf0\highlight0 container\cf1\highlight2 
\par \cf0\highlight0   kubectl run hazelcast --image=hazelcast/hazelcast --env="DNS_DOMAIN=cluster" --env="POD_NAMESPACE=default"\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a hazelcast pod and set labels "app=hazelcast" and "env=prod" in the container\cf1\highlight2 
\par \cf0\highlight0   kubectl run hazelcast --image=hazelcast/hazelcast --labels="app=hazelcast,env=prod"\cf1\highlight2 
\par 
\par \cf0\highlight0   # Dry run; print the corresponding API objects without creating them\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx --dry-run=client\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a nginx pod, but overload the spec with a partial set of values parsed from JSON\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx --overrides='\{ "apiVersion": "v1", "spec": \{ ... \} \}'\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a busybox pod and keep it in the foreground, don't restart it if it exits\cf1\highlight2 
\par \cf0\highlight0   kubectl run -i -t busybox --image=busybox --restart=Never\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start the nginx pod using the default command, but use custom arguments (arg1 .. argN) for that command\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start the nginx pod using a different command and custom arguments\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>\cf1\highlight2 
\par 
\par \cf0\highlight0 Options:\cf1\highlight2 
\par \cf0\highlight0     --allow-missing-template-keys=true:\cf1\highlight2 
\par \cf0\highlight0         If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to\cf1\highlight2 
\par \cf0\highlight0         golang and jsonpath output formats.\cf1\highlight2 
\par 
\par \cf0\highlight0     --annotations=[]:\cf1\highlight2 
\par \cf0\highlight0         Annotations to apply to the pod.\cf1\highlight2 
\par 
\par \cf0\highlight0     --attach=false:\cf1\highlight2 
\par \cf0\highlight0         If true, wait for the Pod to start running, and then attach to the Pod as if 'kubectl attach ...' were called.\cf1\highlight2 
\par \cf0\highlight0         Default false, unless '-i/--stdin' is set, in which case the default is true. With '--restart=Never' the exit\cf1\highlight2 
\par \cf0\highlight0         code of the container process is returned.\cf1\highlight2 
\par 
\par \cf0\highlight0     --command=false:\cf1\highlight2 
\par \cf0\highlight0         If true and extra arguments are present, use them as the 'command' field in the container, rather than the\cf1\highlight2 
\par \cf0\highlight0         'args' field which is the default.\cf1\highlight2 
\par 
\par \cf0\highlight0     --dry-run='none':\cf1\highlight2 
\par \cf0\highlight0         Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without\cf1\highlight2 
\par \cf0\highlight0         sending it. If server strategy, submit server-side request without persisting the resource.\cf1\highlight2 
\par 
\par \cf0\highlight0     --env=[]:\cf1\highlight2 
\par \cf0\highlight0         Environment variables to set in the container.\cf1\highlight2 
\par 
\par \cf0\highlight0     --expose=false:\cf1\highlight2 
\par \cf0\highlight0         If true, create a ClusterIP service associated with the pod.  Requires `--port`.\cf1\highlight2 
\par 
\par \cf0\highlight0     --field-manager='kubectl-run':\cf1\highlight2 
\par \cf0\highlight0         Name of the manager used to track field ownership.\cf1\highlight2 
\par 
\par \cf0\highlight0     --image='':\cf1\highlight2 
\par \cf0\highlight0         The image for the container to run.\cf1\highlight2 
\par 
\par \cf0\highlight0     --image-pull-policy='':\cf1\highlight2 
\par \cf0\highlight0         The image pull policy for the container.  If left empty, this value will not be specified by the client and\cf1\highlight2 
\par \cf0\highlight0         defaulted by the server.\cf1\highlight2 
\par 
\par \cf0\highlight0     -l, --labels='':\cf1\highlight2 
\par \cf0\highlight0         Comma separated labels to apply to the pod. Will override previous values.\cf1\highlight2 
\par 
\par \cf0\highlight0     --leave-stdin-open=false:\cf1\highlight2 
\par \cf0\highlight0         If the pod is started in interactive mode or with stdin, leave stdin open after the first attach completes. By\cf1\highlight2 
\par \cf0\highlight0         default, stdin will be closed after the first attach completes.\cf1\highlight2 
\par 
\par \cf0\highlight0     -o, --output='':\cf1\highlight2 
\par \cf0\highlight0         Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath,\cf1\highlight2 
\par \cf0\highlight0         jsonpath-as-json, jsonpath-file).\cf1\highlight2 
\par 
\par \cf0\highlight0     --override-type='merge':\cf1\highlight2 
\par \cf0\highlight0         The method used to override the generated object: json, merge, or strategic.\cf1\highlight2 
\par 
\par \cf0\highlight0     --overrides='':\cf1\highlight2 
\par \cf0\highlight0         An inline JSON override for the generated object. If this is non-empty, it is used to override the generated\cf1\highlight2 
\par \cf0\highlight0         object. Requires that the object supply a valid apiVersion field.\cf1\highlight2 
\par 
\par \cf0\highlight0     --pod-running-timeout=1m0s:\cf1\highlight2 
\par \cf0\highlight0         The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running\cf1\highlight2 
\par 
\par \cf0\highlight0     --port='':\cf1\highlight2 
\par \cf0\highlight0         The port that this container exposes.\cf1\highlight2 
\par 
\par \cf0\highlight0     --privileged=false:\cf1\highlight2 
\par \cf0\highlight0         If true, run the container in privileged mode.\cf1\highlight2 
\par 
\par \cf0\highlight0     -q, --quiet=false:\cf1\highlight2 
\par \cf0\highlight0         If true, suppress prompt messages.\cf1\highlight2 
\par 
\par \cf0\highlight0     --restart='Always':\cf1\highlight2 
\par \cf0\highlight0         The restart policy for this Pod.  Legal values [Always, OnFailure, Never].\cf1\highlight2 
\par 
\par \cf0\highlight0     --rm=false:\cf1\highlight2 
\par \cf0\highlight0         If true, delete the pod after it exits.  Only valid when attaching to the container, e.g. with '--attach' or\cf1\highlight2 
\par \cf0\highlight0         with '-i/--stdin'.\cf1\highlight2 
\par 
\par \cf0\highlight0     --save-config=false:\cf1\highlight2 
\par \cf0\highlight0         If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will\cf1\highlight2 
\par \cf0\highlight0         be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\cf1\highlight2 
\par 
\par \cf0\highlight0     --show-managed-fields=false:\cf1\highlight2 
\par \cf0\highlight0         If true, keep the managedFields when printing objects in JSON or YAML format.\cf1\highlight2 
\par 
\par \cf0\highlight0     -i, --stdin=false:\cf1\highlight2 
\par \cf0\highlight0         Keep stdin open on the container in the pod, even if nothing is attached.\cf1\highlight2 
\par 
\par \cf0\highlight0     --template='':\cf1\highlight2 
\par \cf0\highlight0         Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format\cf1\highlight2 
\par \cf0\highlight0         is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\cf1\highlight2 
\par 
\par \cf0\highlight0     -t, --tty=false:\cf1\highlight2 
\par \cf0\highlight0         Allocate a TTY for the container in the pod.\cf1\highlight2 
\par 
\par \cf0\highlight0 Usage:\cf1\highlight2 
\par \cf0\highlight0   kubectl run NAME --image=image [--env="key=value"] [--port=port] [--dry-run=server|client] [--overrides=inline-json]\cf1\highlight2 
\par \cf0\highlight0 [--command] -- [COMMAND] [args...] [options]\cf1\highlight2 
\par 
\par \cf0\highlight0 Use "kubectl options" for a list of global command-line options (applies to all commands).\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl run mypod --image nginx:latest --help\cf1\highlight2 
\par \cf0\highlight0 Create and run a particular image in a pod.\cf1\highlight2 
\par 
\par \cf0\highlight0 Examples:\cf1\highlight2 
\par \cf0\highlight0   # Start a nginx pod\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a hazelcast pod and let the container expose port 5701\cf1\highlight2 
\par \cf0\highlight0   kubectl run hazelcast --image=hazelcast/hazelcast --port=5701\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a hazelcast pod and set environment variables "DNS_DOMAIN=cluster" and "POD_NAMESPACE=default" in the\cf1\highlight2 
\par \cf0\highlight0 container\cf1\highlight2 
\par \cf0\highlight0   kubectl run hazelcast --image=hazelcast/hazelcast --env="DNS_DOMAIN=cluster" --env="POD_NAMESPACE=default"\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a hazelcast pod and set labels "app=hazelcast" and "env=prod" in the container\cf1\highlight2 
\par \cf0\highlight0   kubectl run hazelcast --image=hazelcast/hazelcast --labels="app=hazelcast,env=prod"\cf1\highlight2 
\par 
\par \cf0\highlight0   # Dry run; print the corresponding API objects without creating them\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx --dry-run=client\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a nginx pod, but overload the spec with a partial set of values parsed from JSON\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx --overrides='\{ "apiVersion": "v1", "spec": \{ ... \} \}'\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start a busybox pod and keep it in the foreground, don't restart it if it exits\cf1\highlight2 
\par \cf0\highlight0   kubectl run -i -t busybox --image=busybox --restart=Never\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start the nginx pod using the default command, but use custom arguments (arg1 .. argN) for that command\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>\cf1\highlight2 
\par 
\par \cf0\highlight0   # Start the nginx pod using a different command and custom arguments\cf1\highlight2 
\par \cf0\highlight0   kubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>\cf1\highlight2 
\par 
\par \cf0\highlight0 Options:\cf1\highlight2 
\par \cf0\highlight0     --allow-missing-template-keys=true:\cf1\highlight2 
\par \cf0\highlight0         If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to\cf1\highlight2 
\par \cf0\highlight0         golang and jsonpath output formats.\cf1\highlight2 
\par 
\par \cf0\highlight0     --annotations=[]:\cf1\highlight2 
\par \cf0\highlight0         Annotations to apply to the pod.\cf1\highlight2 
\par 
\par \cf0\highlight0     --attach=false:\cf1\highlight2 
\par \cf0\highlight0         If true, wait for the Pod to start running, and then attach to the Pod as if 'kubectl attach ...' were called.\cf1\highlight2 
\par \cf0\highlight0         Default false, unless '-i/--stdin' is set, in which case the default is true. With '--restart=Never' the exit\cf1\highlight2 
\par \cf0\highlight0         code of the container process is returned.\cf1\highlight2 
\par 
\par \cf0\highlight0     --command=false:\cf1\highlight2 
\par \cf0\highlight0         If true and extra arguments are present, use them as the 'command' field in the container, rather than the\cf1\highlight2 
\par \cf0\highlight0         'args' field which is the default.\cf1\highlight2 
\par 
\par \cf0\highlight0     --dry-run='none':\cf1\highlight2 
\par \cf0\highlight0         Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without\cf1\highlight2 
\par \cf0\highlight0         sending it. If server strategy, submit server-side request without persisting the resource.\cf1\highlight2 
\par 
\par \cf0\highlight0     --env=[]:\cf1\highlight2 
\par \cf0\highlight0         Environment variables to set in the container.\cf1\highlight2 
\par 
\par \cf0\highlight0     --expose=false:\cf1\highlight2 
\par \cf0\highlight0         If true, create a ClusterIP service associated with the pod.  Requires `--port`.\cf1\highlight2 
\par 
\par \cf0\highlight0     --field-manager='kubectl-run':\cf1\highlight2 
\par \cf0\highlight0         Name of the manager used to track field ownership.\cf1\highlight2 
\par 
\par \cf0\highlight0     --image='':\cf1\highlight2 
\par \cf0\highlight0         The image for the container to run.\cf1\highlight2 
\par 
\par \cf0\highlight0     --image-pull-policy='':\cf1\highlight2 
\par \cf0\highlight0         The image pull policy for the container.  If left empty, this value will not be specified by the client and\cf1\highlight2 
\par \cf0\highlight0         defaulted by the server.\cf1\highlight2 
\par 
\par \cf0\highlight0     -l, --labels='':\cf1\highlight2 
\par \cf0\highlight0         Comma separated labels to apply to the pod. Will override previous values.\cf1\highlight2 
\par 
\par \cf0\highlight0     --leave-stdin-open=false:\cf1\highlight2 
\par \cf0\highlight0         If the pod is started in interactive mode or with stdin, leave stdin open after the first attach completes. By\cf1\highlight2 
\par \cf0\highlight0         default, stdin will be closed after the first attach completes.\cf1\highlight2 
\par 
\par \cf0\highlight0     -o, --output='':\cf1\highlight2 
\par \cf0\highlight0         Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath,\cf1\highlight2 
\par \cf0\highlight0         jsonpath-as-json, jsonpath-file).\cf1\highlight2 
\par 
\par \cf0\highlight0     --override-type='merge':\cf1\highlight2 
\par \cf0\highlight0         The method used to override the generated object: json, merge, or strategic.\cf1\highlight2 
\par 
\par \cf0\highlight0     --overrides='':\cf1\highlight2 
\par \cf0\highlight0         An inline JSON override for the generated object. If this is non-empty, it is used to override the generated\cf1\highlight2 
\par \cf0\highlight0         object. Requires that the object supply a valid apiVersion field.\cf1\highlight2 
\par 
\par \cf0\highlight0     --pod-running-timeout=1m0s:\cf1\highlight2 
\par \cf0\highlight0         The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running\cf1\highlight2 
\par 
\par \cf0\highlight0     --port='':\cf1\highlight2 
\par \cf0\highlight0         The port that this container exposes.\cf1\highlight2 
\par 
\par \cf0\highlight0     --privileged=false:\cf1\highlight2 
\par \cf0\highlight0         If true, run the container in privileged mode.\cf1\highlight2 
\par 
\par \cf0\highlight0     -q, --quiet=false:\cf1\highlight2 
\par \cf0\highlight0         If true, suppress prompt messages.\cf1\highlight2 
\par 
\par \cf0\highlight0     --restart='Always':\cf1\highlight2 
\par \cf0\highlight0         The restart policy for this Pod.  Legal values [Always, OnFailure, Never].\cf1\highlight2 
\par 
\par \cf0\highlight0     --rm=false:\cf1\highlight2 
\par \cf0\highlight0         If true, delete the pod after it exits.  Only valid when attaching to the container, e.g. with '--attach' or\cf1\highlight2 
\par \cf0\highlight0         with '-i/--stdin'.\cf1\highlight2 
\par 
\par \cf0\highlight0     --save-config=false:\cf1\highlight2 
\par \cf0\highlight0         If true, the configuration of current object will be saved in its annotation. Otherwise, the annotation will\cf1\highlight2 
\par \cf0\highlight0         be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.\cf1\highlight2 
\par 
\par \cf0\highlight0     --show-managed-fields=false:\cf1\highlight2 
\par \cf0\highlight0         If true, keep the managedFields when printing objects in JSON or YAML format.\cf1\highlight2 
\par 
\par \cf0\highlight0     -i, --stdin=false:\cf1\highlight2 
\par \cf0\highlight0         Keep stdin open on the container in the pod, even if nothing is attached.\cf1\highlight2 
\par 
\par \cf0\highlight0     --template='':\cf1\highlight2 
\par \cf0\highlight0         Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format\cf1\highlight2 
\par \cf0\highlight0         is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\cf1\highlight2 
\par 
\par \cf0\highlight0     -t, --tty=false:\cf1\highlight2 
\par \cf0\highlight0         Allocate a TTY for the container in the pod.\cf1\highlight2 
\par 
\par \cf0\highlight0 Usage:\cf1\highlight2 
\par \cf0\highlight0   kubectl run NAME --image=image [--env="key=value"] [--port=port] [--dry-run=server|client] [--overrides=inline-json]\cf1\highlight2 
\par \cf0\highlight0 [--command] -- [COMMAND] [args...] [options]\cf1\highlight2 
\par 
\par \cf0\highlight0 Use "kubectl options" for a list of global command-line options (applies to all commands).\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl explain\cf1\highlight2 
\par \cf0\highlight0 error: You must specify the type of resource to explain. Use "kubectl api-resources" for a complete list of supported resources.\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl explain pod\cf1\highlight2 
\par \cf0\highlight0 KIND:       Pod\cf1\highlight2 
\par \cf0\highlight0 VERSION:    v1\cf1\highlight2 
\par 
\par \cf0\highlight0 DESCRIPTION:\cf1\highlight2 
\par \cf0\highlight0     Pod is a collection of containers that can run on a host. This resource is\cf1\highlight2 
\par \cf0\highlight0     created by clients and scheduled onto hosts.\cf1\highlight2 
\par 
\par \cf0\highlight0 FIELDS:\cf1\highlight2 
\par \cf0\highlight0   apiVersion    <string>\cf1\highlight2 
\par \cf0\highlight0     APIVersion defines the versioned schema of this representation of an object.\cf1\highlight2 
\par \cf0\highlight0     Servers should convert recognized schemas to the latest internal value, and\cf1\highlight2 
\par \cf0\highlight0     may reject unrecognized values. More info:\cf1\highlight2 
\par \cf0\highlight0     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\cf1\highlight2 
\par 
\par \cf0\highlight0   kind  <string>\cf1\highlight2 
\par \cf0\highlight0     Kind is a string value representing the REST resource this object\cf1\highlight2 
\par \cf0\highlight0     represents. Servers may infer this from the endpoint the client submits\cf1\highlight2 
\par \cf0\highlight0     requests to. Cannot be updated. In CamelCase. More info:\cf1\highlight2 
\par \cf0\highlight0     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\cf1\highlight2 
\par 
\par \cf0\highlight0   metadata      <ObjectMeta>\cf1\highlight2 
\par \cf0\highlight0     Standard object's metadata. More info:\cf1\highlight2 
\par \cf0\highlight0     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\cf1\highlight2 
\par 
\par \cf0\highlight0   spec  <PodSpec>\cf1\highlight2 
\par \cf0\highlight0     Specification of the desired behavior of the pod. More info:\cf1\highlight2 
\par \cf0\highlight0     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\cf1\highlight2 
\par 
\par \cf0\highlight0   status        <PodStatus>\cf1\highlight2 
\par \cf0\highlight0     Most recently observed status of the pod. This data may not be up to date.\cf1\highlight2 
\par \cf0\highlight0     Populated by the system. Read-only. More info:\cf1\highlight2 
\par \cf0\highlight0     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\cf1\highlight2 
\par 
\par 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0 Name:             latestnginxversion\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode1/172.31.33.162\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sun, 10 Nov 2024 13:21:34 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=latestnginxversion\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.1.169\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.1.169\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   latestnginxversion:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://3a41d4f221f82386e76bd5731436ecc37c5ccab0bb9ae430b20f2dbaafef7270\cf1\highlight2 
\par \cf0\highlight0     Image:          nginx:latest\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:04 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  2\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-l56v7 (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-l56v7:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_latestnginxversion_default_417b706b-e60b-4733-a7e5-362d819a7c1d_0(2bf483b88e1a2271f960f96e8b157ef1b333e4fd9a190989b1d73b2d79493af7): error adding pod default_latestnginxversion to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "nginx:latest" in 1.991s (3.932s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  30m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_latestnginxversion_default_417b706b-e60b-4733-a7e5-362d819a7c1d_0(114ac13665573a014ebc93c6f10429d9d8e9db003ead2505b9f0d9ce6c3a0529): error adding pod default_latestnginxversion to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  30m  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   30m  kubelet  Successfully pulled image "nginx:latest" in 2.005s (2.006s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  30m  kubelet  Created container latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  30m  kubelet  Started container latestnginxversion\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Name:             mypod\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode1/172.31.33.162\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sat, 09 Nov 2024 14:47:17 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=mypod\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.1.100\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.1.100\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   mypod:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://8188beebf0f2af409257c4a2e7126bf088bb31f976934e5a88bda66bd3f707f9\cf1\highlight2 
\par \cf0\highlight0     Image:          nginx:latest\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:07 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  3\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mftbf (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-mftbf:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_mypod_default_04003740-5cfa-4271-a23a-8412d525d230_0(4aa7e6c034342fafbd468a27a50956d9b9a310962e0c7e842d1949e2409d554a): error adding pod default_mypod to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "nginx:latest" in 2.009s (4.942s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container mypod\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container mypod\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  30m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_mypod_default_04003740-5cfa-4271-a23a-8412d525d230_0(79e6a3cdd8393dc852c2770c151f41e617a5d2ca300b98a58f2aca0e6d8eacf0): error adding pod default_mypod to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  30m  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   30m  kubelet  Successfully pulled image "nginx:latest" in 1.969s (4.929s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  30m  kubelet  Created container mypod\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  30m  kubelet  Started container mypod\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Name:             nginx\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode2/172.31.37.26\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sun, 10 Nov 2024 13:15:32 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=nginx\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.2.241\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.2.241\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   nginx:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://aa11133447a2fa960936e52a52a94e00f97e1b3e10df66693d62e0f4eefd3465\cf1\highlight2 
\par \cf0\highlight0     Image:          nginx\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:04 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  2\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-2cwj7 (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-2cwj7:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_nginx_default_a2634abd-4b8e-43a7-a53f-69dbe698142b_0(63234e665992ed2784b877b0c2f3dfc7ff2c440454ad72a53036ad09004840b5): error adding pod default_nginx to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "nginx"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "nginx" in 2.049s (2.05s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container nginx\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container nginx\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  30m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_nginx_default_a2634abd-4b8e-43a7-a53f-69dbe698142b_0(b83d2b6f30a6c8f49aebf0b9ed0c1db5c8e3c33d6cadb5ccde1039a30086c2fd): error adding pod default_nginx to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  30m  kubelet  Pulling image "nginx"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   30m  kubelet  Successfully pulled image "nginx" in 2.01s (2.01s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  30m  kubelet  Created container nginx\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  30m  kubelet  Started container nginx\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Name:             redis\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode1/172.31.33.162\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sun, 10 Nov 2024 13:12:09 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=redis\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.1.121\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.1.121\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   redis:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://94f26d7d9722e2a560fc55f868a628c586168a1cdfbe074498d3cfa3b634ec11\cf1\highlight2 
\par \cf0\highlight0     Image:          redis\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/redis@sha256:a06cea905344470eb49c972f3d030e22f28f632c1b4f43bbe4a26a4329dd6be5\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:06 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  2\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-74fjc (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-74fjc:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_redis_default_6ee02f78-872a-4b42-b599-245952b30ad4_0(f20253d6a047fc7c44150122ed9846dee281328e97e0cbe3197d1e7c5ec3b510): error adding pod default_redis to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "redis"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "redis" in 1.982s (4.881s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container redis\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container redis\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  30m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_redis_default_6ee02f78-872a-4b42-b599-245952b30ad4_0(644b6e47cb9a59c4346274d69a0874fa377da856797f7f036b87f900213947e3): error adding pod default_redis to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  30m  kubelet  Pulling image "redis"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   30m  kubelet  Successfully pulled image "redis" in 1.994s (2.967s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  30m  kubelet  Created container redis\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  30m  kubelet  Started container redis\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod | grep "Name"\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             latestnginxversion\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 space:        default\cf1\highlight2 
\par \cf0\highlight0     ConfigMap\cf8 Name\cf0 :           kube-root-ca.crt\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             mypod\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 space:        default\cf1\highlight2 
\par \cf0\highlight0     ConfigMap\cf8 Name\cf0 :           kube-root-ca.crt\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             nginx\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 space:        default\cf1\highlight2 
\par \cf0\highlight0     ConfigMap\cf8 Name\cf0 :           kube-root-ca.crt\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             redis\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 space:        default\cf1\highlight2 
\par \cf0\highlight0     ConfigMap\cf8 Name\cf0 :           kube-root-ca.crt\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pod | grep -w "Name"\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             latestnginxversion\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             mypod\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             nginx\cf1\highlight2 
\par \cf8\highlight0 Name\cf0 :             redis\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # kubectl describe pods\cf1\highlight2 
\par \cf0\highlight0 Name:             latestnginxversion\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode1/172.31.33.162\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sun, 10 Nov 2024 13:21:34 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=latestnginxversion\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.1.169\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.1.169\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   latestnginxversion:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://3a41d4f221f82386e76bd5731436ecc37c5ccab0bb9ae430b20f2dbaafef7270\cf1\highlight2 
\par \cf0\highlight0     Image:          nginx:latest\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:04 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  2\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-l56v7 (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-l56v7:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_latestnginxversion_default_417b706b-e60b-4733-a7e5-362d819a7c1d_0(2bf483b88e1a2271f960f96e8b157ef1b333e4fd9a190989b1d73b2d79493af7): error adding pod default_latestnginxversion to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "nginx:latest" in 1.991s (3.932s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  32m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_latestnginxversion_default_417b706b-e60b-4733-a7e5-362d819a7c1d_0(114ac13665573a014ebc93c6f10429d9d8e9db003ead2505b9f0d9ce6c3a0529): error adding pod default_latestnginxversion to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  32m  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   32m  kubelet  Successfully pulled image "nginx:latest" in 2.005s (2.006s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  32m  kubelet  Created container latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  32m  kubelet  Started container latestnginxversion\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Name:             mypod\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode1/172.31.33.162\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sat, 09 Nov 2024 14:47:17 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=mypod\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.1.100\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.1.100\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   mypod:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://8188beebf0f2af409257c4a2e7126bf088bb31f976934e5a88bda66bd3f707f9\cf1\highlight2 
\par \cf0\highlight0     Image:          nginx:latest\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:07 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  3\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mftbf (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-mftbf:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_mypod_default_04003740-5cfa-4271-a23a-8412d525d230_0(4aa7e6c034342fafbd468a27a50956d9b9a310962e0c7e842d1949e2409d554a): error adding pod default_mypod to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "nginx:latest" in 2.009s (4.942s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container mypod\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container mypod\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  32m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_mypod_default_04003740-5cfa-4271-a23a-8412d525d230_0(79e6a3cdd8393dc852c2770c151f41e617a5d2ca300b98a58f2aca0e6d8eacf0): error adding pod default_mypod to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  32m  kubelet  Pulling image "nginx:latest"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   32m  kubelet  Successfully pulled image "nginx:latest" in 1.969s (4.929s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  32m  kubelet  Created container mypod\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  32m  kubelet  Started container mypod\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Name:             nginx\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode2/172.31.37.26\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sun, 10 Nov 2024 13:15:32 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=nginx\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.2.241\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.2.241\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   nginx:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://aa11133447a2fa960936e52a52a94e00f97e1b3e10df66693d62e0f4eefd3465\cf1\highlight2 
\par \cf0\highlight0     Image:          nginx\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/nginx@sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:04 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  2\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-2cwj7 (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-2cwj7:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_nginx_default_a2634abd-4b8e-43a7-a53f-69dbe698142b_0(63234e665992ed2784b877b0c2f3dfc7ff2c440454ad72a53036ad09004840b5): error adding pod default_nginx to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "nginx"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "nginx" in 2.049s (2.05s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container nginx\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container nginx\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  32m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_nginx_default_a2634abd-4b8e-43a7-a53f-69dbe698142b_0(b83d2b6f30a6c8f49aebf0b9ed0c1db5c8e3c33d6cadb5ccde1039a30086c2fd): error adding pod default_nginx to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  32m  kubelet  Pulling image "nginx"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   32m  kubelet  Successfully pulled image "nginx" in 2.01s (2.01s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  32m  kubelet  Created container nginx\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  32m  kubelet  Started container nginx\cf1\highlight2 
\par 
\par 
\par \cf0\highlight0 Name:             redis\cf1\highlight2 
\par \cf0\highlight0 Namespace:        default\cf1\highlight2 
\par \cf0\highlight0 Priority:         0\cf1\highlight2 
\par \cf0\highlight0 Service Account:  default\cf1\highlight2 
\par \cf0\highlight0 Node:             k8s-workernode1/172.31.33.162\cf1\highlight2 
\par \cf0\highlight0 Start Time:       Sun, 10 Nov 2024 13:12:09 +0000\cf1\highlight2 
\par \cf0\highlight0 Labels:           run=redis\cf1\highlight2 
\par \cf0\highlight0 Annotations:      <none>\cf1\highlight2 
\par \cf0\highlight0 Status:           Running\cf1\highlight2 
\par \cf0\highlight0 IP:               10.0.1.121\cf1\highlight2 
\par \cf0\highlight0 IPs:\cf1\highlight2 
\par \cf0\highlight0   IP:  10.0.1.121\cf1\highlight2 
\par \cf0\highlight0 Containers:\cf1\highlight2 
\par \cf0\highlight0   redis:\cf1\highlight2 
\par \cf0\highlight0     Container ID:   cri-o://94f26d7d9722e2a560fc55f868a628c586168a1cdfbe074498d3cfa3b634ec11\cf1\highlight2 
\par \cf0\highlight0     Image:          redis\cf1\highlight2 
\par \cf0\highlight0     Image ID:       docker.io/library/redis@sha256:a06cea905344470eb49c972f3d030e22f28f632c1b4f43bbe4a26a4329dd6be5\cf1\highlight2 
\par \cf0\highlight0     Port:           <none>\cf1\highlight2 
\par \cf0\highlight0     Host Port:      <none>\cf1\highlight2 
\par \cf0\highlight0     State:          Running\cf1\highlight2 
\par \cf0\highlight0       Started:      Mon, 11 Nov 2024 15:40:06 +0000\cf1\highlight2 
\par \cf0\highlight0     Ready:          True\cf1\highlight2 
\par \cf0\highlight0     Restart Count:  2\cf1\highlight2 
\par \cf0\highlight0     Environment:    <none>\cf1\highlight2 
\par \cf0\highlight0     Mounts:\cf1\highlight2 
\par \cf0\highlight0       /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-74fjc (ro)\cf1\highlight2 
\par \cf0\highlight0 Conditions:\cf1\highlight2 
\par \cf0\highlight0   Type              Status\cf1\highlight2 
\par \cf0\highlight0   Initialized       True\cf1\highlight2 
\par \cf0\highlight0   Ready             True\cf1\highlight2 
\par \cf0\highlight0   ContainersReady   True\cf1\highlight2 
\par \cf0\highlight0   PodScheduled      True\cf1\highlight2 
\par \cf0\highlight0 Volumes:\cf1\highlight2 
\par \cf0\highlight0   kube-api-access-74fjc:\cf1\highlight2 
\par \cf0\highlight0     Type:                    Projected (a volume that contains injected data from multiple sources)\cf1\highlight2 
\par \cf0\highlight0     TokenExpirationSeconds:  3607\cf1\highlight2 
\par \cf0\highlight0     ConfigMapName:           kube-root-ca.crt\cf1\highlight2 
\par \cf0\highlight0     ConfigMapOptional:       <nil>\cf1\highlight2 
\par \cf0\highlight0     DownwardAPI:             true\cf1\highlight2 
\par \cf0\highlight0 QoS Class:                   BestEffort\cf1\highlight2 
\par \cf0\highlight0 Node-Selectors:              <none>\cf1\highlight2 
\par \cf0\highlight0 Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0                              node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\cf1\highlight2 
\par \cf0\highlight0 Events:\cf1\highlight2 
\par \cf0\highlight0   Type     Reason                  Age   From     Message\cf1\highlight2 
\par \cf0\highlight0   ----     ------                  ----  ----     -------\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  12h   kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_redis_default_6ee02f78-872a-4b42-b599-245952b30ad4_0(f20253d6a047fc7c44150122ed9846dee281328e97e0cbe3197d1e7c5ec3b510): error adding pod default_redis to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulling                 12h  kubelet  Pulling image "redis"\cf1\highlight2 
\par \cf0\highlight0   Normal   Pulled                  12h  kubelet  Successfully pulled image "redis" in 1.982s (4.881s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal   Created                 12h  kubelet  Created container redis\cf1\highlight2 
\par \cf0\highlight0   Normal   Started                 12h  kubelet  Started container redis\cf1\highlight2 
\par \cf0\highlight0   Warning  FailedCreatePodSandBox  32m  kubelet  Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_redis_default_6ee02f78-872a-4b42-b599-245952b30ad4_0(644b6e47cb9a59c4346274d69a0874fa377da856797f7f036b87f900213947e3): error adding pod default_redis to CNI network "cilium": plugin type="cilium-cni" failed (add): unable to connect to Cilium agent: failed to create cilium agent client after 30.000000 seconds timeout: Get "http://localhost/v1/config": dial unix /var/run/cilium/cilium.sock: connect: no such file or directory\cf1\highlight2 
\par \cf0\highlight0 Is the agent running?\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulling  32m  kubelet  Pulling image "redis"\cf1\highlight2 
\par \cf0\highlight0   Normal  Pulled   32m  kubelet  Successfully pulled image "redis" in 1.994s (2.967s including waiting)\cf1\highlight2 
\par \cf0\highlight0   Normal  Created  32m  kubelet  Created container redis\cf1\highlight2 
\par \cf0\highlight0   Normal  Started  32m  kubelet  Started container redis\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 # history\cf1\highlight2 
\par \cf0\highlight0     1  kube\cf1\highlight2 
\par \cf0\highlight0     2  crictl ps\cf1\highlight2 
\par \cf0\highlight0     3  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0     4  kube\cf1\highlight2 
\par \cf0\highlight0     5  lear\cf1\highlight2 
\par \cf0\highlight0     6  clear\cf1\highlight2 
\par \cf0\highlight0     7  kubectl status\cf1\highlight2 
\par \cf0\highlight0     8  kubeadm status\cf1\highlight2 
\par \cf0\highlight0     9  kubectl version command\cf1\highlight2 
\par \cf0\highlight0    10  kube\cf1\highlight2 
\par \cf0\highlight0    11  kubeadm init\cf1\highlight2 
\par \cf0\highlight0    12  mkdir -p $HOME/.kube\cf1\highlight2 
\par \cf0\highlight0    13  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\cf1\highlight2 
\par \cf0\highlight0    14  sudo chown $(id -u):$(id -g) $HOME/.kube/config\cf1\highlight2 
\par \cf0\highlight0    15  kubectl get nodes\cf1\highlight2 
\par \cf0\highlight0    16  vi cilium.sh\cf1\highlight2 
\par \cf0\highlight0    17  kubectl get pod\cf1\highlight2 
\par \cf0\highlight0    18  kubectl get pod -n kube-system\cf1\highlight2 
\par \cf0\highlight0    19  source .bashrc\cf1\highlight2 
\par \cf0\highlight0    20  kube\cf1\highlight2 
\par \cf0\highlight0    21  vi .bashrc\cf1\highlight2 
\par \cf0\highlight0    22  kube\cf1\highlight2 
\par \cf0\highlight0    23  kubelet version\cf1\highlight2 
\par \cf0\highlight0    24  kubectl version\cf1\highlight2 
\par \cf0\highlight0    25  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0    26  crictl ps\cf1\highlight2 
\par \cf0\highlight0    27  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0    28  crictl ps\cf1\highlight2 
\par \cf0\highlight0    29  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0    30  cd /etc\cf1\highlight2 
\par \cf0\highlight0    31  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    32  cd /root\cf1\highlight2 
\par \cf0\highlight0    33  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    34  export PS1='\\[\\033[0;31m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    35  ls -lart\cf1\highlight2 
\par \cf0\highlight0    36  vi .bashrc\cf1\highlight2 
\par \cf0\highlight0    37  export PS1="\\[\\033[34m\\][\\$(date +%H%M)][\\u@\\h:\\w]$ "\cf1\highlight2 
\par \cf0\highlight0    38  export PS1='\\[\\033[0;32m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    39  export PS1='\\[\\033[0;35m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    40  export PS1='\\[\\033[0;33m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    41  export PS1='\\[\\033[0;36m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    42  export PS1='\\[\\033[0;35m\\]\\u@\\h:\\[\\033[36m\\]\\W\\[\\033[0m\\] \\$ '\cf1\highlight2 
\par \cf0\highlight0    43  vi /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    44  sh /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    45  vi /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    46  export PS1='$(whoami)@$(hostname):$(pwd)$ '\cf1\highlight2 
\par \cf0\highlight0    47  export PS1='\\[\\e[0;36m\\]\\u\\[\\e[0m\\]@\\[\\e[0;33m\\]\\h\\[\\e[0m\\]:\\[\\e[0;35m\\]\\w\\[\\e[0m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    48  pwd\cf1\highlight2 
\par \cf0\highlight0    49  export PS1="[\\e[1;33m\\u\\e[m@\\e[1;36m\\h\\e[m] [\\$(date +%k:%M:%S)]\\n\\e[0;32m[\\w]\\e[m \\n\\$ "\cf1\highlight2 
\par \cf0\highlight0    50  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\](\\D\{%H:%M:%S\})\\[\\033[01;34m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    51  pwd\cf1\highlight2 
\par \cf0\highlight0    52  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;35m\\]\\u@\\h\\[\\033[00m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    53  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\](\\D\{%H:%M:%S\})\\[\\033[01;34m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    54  PS1='$\{debian_chroot:+($debian_chroot)\}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]\\[\\033[01;34m\\]:$PWD\\[\\033[00m\\]\\$ '\cf1\highlight2 
\par \cf0\highlight0    55  cd\cf1\highlight2 
\par \cf0\highlight0    56  vi /root/.bashrc\cf1\highlight2 
\par \cf0\highlight0    57  crictl ps\cf1\highlight2 
\par \cf0\highlight0    58  systemctl crio status\cf1\highlight2 
\par \cf0\highlight0    59  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    60  free -h\cf1\highlight2 
\par \cf0\highlight0    61  kubeadm init\cf1\highlight2 
\par \cf0\highlight0    62  kubeadm init --v=5\cf1\highlight2 
\par \cf0\highlight0    63  echo $HOME\cf1\highlight2 
\par \cf0\highlight0    64  ls -lart\cf1\highlight2 
\par \cf0\highlight0    65  cd /\cf1\highlight2 
\par \cf0\highlight0    66  ls -lart\cf1\highlight2 
\par \cf0\highlight0    67  cd /etc/kubernetes\cf1\highlight2 
\par \cf0\highlight0    68  ls -lart\cf1\highlight2 
\par \cf0\highlight0    69  vi admin.conf\cf1\highlight2 
\par \cf0\highlight0    70  cd pki\cf1\highlight2 
\par \cf0\highlight0    71  ls -lart\cf1\highlight2 
\par \cf0\highlight0    72  vi admin.conf\cf1\highlight2 
\par \cf0\highlight0    73  cd ..\cf1\highlight2 
\par \cf0\highlight0    74  vi admin.conf\cf1\highlight2 
\par \cf0\highlight0    75  vi controller-manager.conf\cf1\highlight2 
\par \cf0\highlight0    76  vi scheduler.conf\cf1\highlight2 
\par \cf0\highlight0    77  vi kubelet.conf\cf1\highlight2 
\par \cf0\highlight0    78  cd manifests/\cf1\highlight2 
\par \cf0\highlight0    79  ls -lart\cf1\highlight2 
\par \cf0\highlight0    80  vi etcd.yaml\cf1\highlight2 
\par \cf0\highlight0    81  vi kube-apiserver.yaml\cf1\highlight2 
\par \cf0\highlight0    82  vi kube-controller-manager.yaml\cf1\highlight2 
\par \cf0\highlight0    83  vi kube-scheduler.yaml\cf1\highlight2 
\par \cf0\highlight0    84  vi etcd.yaml\cf1\highlight2 
\par \cf0\highlight0    85  systemctl start crio\cf1\highlight2 
\par \cf0\highlight0    86  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    87  systemctl stop crio\cf1\highlight2 
\par \cf0\highlight0    88  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    89  systemctl start crio\cf1\highlight2 
\par \cf0\highlight0    90  systemctl status crio\cf1\highlight2 
\par \cf0\highlight0    91  kubeadm init\cf1\highlight2 
\par \cf0\highlight0    92  kubectl get nodes\cf1\highlight2 
\par \cf0\highlight0    93  cd /\cf1\highlight2 
\par \cf0\highlight0    94  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    95  find / -type f -name cilium.sh\cf1\highlight2 
\par \cf0\highlight0    96  cd /root\cf1\highlight2 
\par \cf0\highlight0    97  ls -lrt\cf1\highlight2 
\par \cf0\highlight0    98  cd /usr/local/bin\cf1\highlight2 
\par \cf0\highlight0    99  ls -lart\cf1\highlight2 
\par \cf0\highlight0   100  vi cilium\cf1\highlight2 
\par \cf0\highlight0   101  kubectl status cni\cf1\highlight2 
\par \cf0\highlight0   102  systemctl status cni\cf1\highlight2 
\par \cf0\highlight0   103  systemctl status cilium\cf1\highlight2 
\par \cf0\highlight0   104  crictl ps\cf1\highlight2 
\par \cf0\highlight0   105  kubectl get pod\cf1\highlight2 
\par \cf0\highlight0   106  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   107  kubectl get po\cf1\highlight2 
\par \cf0\highlight0   108  kubectl get pod -n kube-system\cf1\highlight2 
\par \cf0\highlight0   109  find / -type f -name .bashrc\cf1\highlight2 
\par \cf0\highlight0   110  vi /root/ bashrc\cf1\highlight2 
\par \cf0\highlight0   111  vi /home/ubuntu/.bashrc\cf1\highlight2 
\par \cf0\highlight0   112  cd ^\cf1\highlight2 
\par \cf0\highlight0   113  cd ~\cf1\highlight2 
\par \cf0\highlight0   114  echo "source <(kubectl completion bash)" >> .bashrc\cf1\highlight2 
\par \cf0\highlight0   115  source .bashrc\cf1\highlight2 
\par \cf0\highlight0   116  kubectl describe pod mypod\cf1\highlight2 
\par \cf0\highlight0   117  cd /var\cf1\highlight2 
\par \cf0\highlight0   118  cd /run/secrets\cf1\highlight2 
\par \cf0\highlight0   119  ls\cf1\highlight2 
\par \cf0\highlight0   120  ls -lart\cf1\highlight2 
\par \cf0\highlight0   121  vi run\cf1\highlight2 
\par \cf0\highlight0   122  kubectl run redis --image=redis\cf1\highlight2 
\par \cf0\highlight0   123  kubectl describe pod redis\cf1\highlight2 
\par \cf0\highlight0   124  kubectl run --image=nginx\cf1\highlight2 
\par \cf0\highlight0   125  kubectl run nginx --image=nginx\cf1\highlight2 
\par \cf0\highlight0   126  kubectl describe pod nginx\cf1\highlight2 
\par \cf0\highlight0   127  kubectl run nginx --image=nginx:latest\cf1\highlight2 
\par \cf0\highlight0   128  kubectl run latestnginxversion --image=nginx:latest\cf1\highlight2 
\par \cf0\highlight0   129  kubectl describe pod latestnginxversion\cf1\highlight2 
\par \cf0\highlight0   130  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   131  kubectl run nginx --image=nginx --replicas=3\cf1\highlight2 
\par \cf0\highlight0   132  kubectl run 3replicasofnginx --image=nginx --replicas=3\cf1\highlight2 
\par \cf0\highlight0   133  kubectl logs mypod\cf1\highlight2 
\par \cf0\highlight0   134  kubectl logs nginx\cf1\highlight2 
\par \cf0\highlight0   135  kubectl logs redis\cf1\highlight2 
\par \cf0\highlight0   136  kubectl exec -it mypod --bash\cf1\highlight2 
\par \cf0\highlight0   137  kubectl exec -it mypod -- bash\cf1\highlight2 
\par \cf0\highlight0   138  kubectl get pods -o wide\cf1\highlight2 
\par \cf0\highlight0   139  crictl status\cf1\highlight2 
\par \cf0\highlight0   140  crictl ps\cf1\highlight2 
\par \cf0\highlight0   141  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   142  kubectl describe\cf1\highlight2 
\par \cf0\highlight0   143  kubectl describe pod mypod\cf1\highlight2 
\par \cf0\highlight0   144  crictl ps\cf1\highlight2 
\par \cf0\highlight0   145  cd /var/logs\cf1\highlight2 
\par \cf0\highlight0   146  cd /var/log\cf1\highlight2 
\par \cf0\highlight0   147  ls\cf1\highlight2 
\par \cf0\highlight0   148  cd pods\cf1\highlight2 
\par \cf0\highlight0   149  ls\cf1\highlight2 
\par \cf0\highlight0   150  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   151  kubectl run mypod --image nginx:latest --port 80 --dry-run=client\cf1\highlight2 
\par \cf0\highlight0   152  kubectl get pods\cf1\highlight2 
\par \cf0\highlight0   153  kubectl run mypod --image nginx:latest --port 80 --dry-run=client -o yaml\cf1\highlight2 
\par \cf0\highlight0   154  kubectl run mypod --image nginx:latest --port 80 --dry-run=client -o yaml > firstpod.yaml\cf1\highlight2 
\par \cf0\highlight0   155  ls -lart\cf1\highlight2 
\par \cf0\highlight0   156  rz\cf1\highlight2 
\par \cf0\highlight0   157  **00000000000000\cf1\highlight2 
\par \cf0\highlight0   158  apt install lrzsz\cf1\highlight2 
\par \cf0\highlight0   159  rz\cf1\highlight2 
\par \cf0\highlight0   160  **0100000063f694\cf1\highlight2 
\par \cf0\highlight0   161  \u9618?**0100000063f694\cf1\highlight2 
\par \cf0\highlight0   162  \u9618?\cf1\highlight2 
\par \cf0\highlight0   163  **0100000063f694\cf1\highlight2 
\par \cf0\highlight0   164  \u9618?**0100000063f694\cf1\highlight2 
\par \cf0\highlight0   165  **0100000063f694\cf1\highlight2 
\par \cf0\highlight0   166  \u9618?**0100000063f694\cf1\highlight2 
\par \cf0\highlight0   167  history\cf1\highlight2 
\par \cf0\highlight0   168  kube\cf1\highlight2 
\par \cf0\highlight0   169  kubectl\cf1\highlight2 
\par \cf0\highlight0   170  kubectl run mypod --image nginx:latest --port 80 --help\cf1\highlight2 
\par \cf0\highlight0   171  kubectl explain\cf1\highlight2 
\par \cf0\highlight0   172  kubectl explain pod\cf1\highlight2 
\par \cf0\highlight0   173  kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0   174  apt-install fish\cf1\highlight2 
\par \cf0\highlight0   175  apt install fish\cf1\highlight2 
\par \cf0\highlight0   176  fish\cf1\highlight2 
\par \cf0\highlight0   177  history\cf1\highlight2 
\par \cf0\highlight0   178  kube\cf1\highlight2 
\par \cf0\highlight0   179  kubekubectl\cf1\highlight2 
\par \cf0\highlight0   180  kubectl\cf1\highlight2 
\par \cf0\highlight0   181  kube\cf1\highlight2 
\par \cf0\highlight0   182*\cf1\highlight2 
\par \cf0\highlight0   183  kubectl describe pod podtemplates\cf1\highlight2 
\par \cf0\highlight0   184  kubectl describe podtemplates\cf1\highlight2 
\par \cf0\highlight0   185*\cf1\highlight2 
\par \cf0\highlight0   186  kubectl run mypod --image nginx:latest --help\cf1\highlight2 
\par \cf0\highlight0   187  kubectl explain\cf1\highlight2 
\par \cf0\highlight0   188  kubectl explain pod\cf1\highlight2 
\par \cf0\highlight0   189  kubectl describe pod\cf1\highlight2 
\par \cf0\highlight0   190  kubectl describe pod | grep "Name"\cf1\highlight2 
\par \cf0\highlight0   191  kubectl describe pod | grep -w "Name"\cf1\highlight2 
\par \cf0\highlight0   192  kubectl describe pods\cf1\highlight2 
\par \cf0\highlight0   193  history\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf3\highlight0 root@k8s-master\cf7 :/root\cf0 #\cf1\highlight2 
\par \cf9\highlight0 Remote side unexpectedly closed network connection\cf1\highlight2 
\par 
\par \cf10\highlight0\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\cf1\highlight2 
\par 
\par \cf9\highlight0 Session stopped\cf1\highlight2 
\par \cf0\highlight0     - Press \cf5 <Return>\cf0  to exit tab\cf1\highlight2 
\par \cf0\highlight0     - Press \cf5 R\cf0  to restart session\cf1\highlight2 
\par \cf0\highlight0     - Press \cf5 S\cf0  to save terminal output to file\cf1\highlight2 
\par \pard\cf0\highlight0\f2\fs12 
\par }
 